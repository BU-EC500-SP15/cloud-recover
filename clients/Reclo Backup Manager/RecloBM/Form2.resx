<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>